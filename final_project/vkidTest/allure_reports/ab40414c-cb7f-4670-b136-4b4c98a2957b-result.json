{"name": "test_dont_accept", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: cannot kill Chrome\n  (Session info: chrome=96.0.4664.45)\nStacktrace:\n#0 0x55b960af5ee3 <unknown>\n#1 0x55b9605c3608 <unknown>\n#2 0x55b9605a24de <unknown>\n#3 0x55b9605a7de7 <unknown>\n#4 0x55b96061e96f <unknown>\n#5 0x55b9605e1af3 <unknown>\n#6 0x55b9605ecbfc <unknown>\n#7 0x55b9605edc05 <unknown>\n#8 0x55b960b27baa <unknown>\n#9 0x55b960b3d651 <unknown>\n#10 0x55b960b28b05 <unknown>\n#11 0x55b960b3ea68 <unknown>\n#12 0x55b960b1d05f <unknown>\n#13 0x55b960b59818 <unknown>\n#14 0x55b960b59998 <unknown>\n#15 0x55b960b74eed <unknown>\n#16 0x7fc1bab26609 <unknown>", "trace": "self = <allure_commons._allure.fixture object at 0x0000020EF5FA7FD0>, args = (), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\nD:\\Anaconda3\\envs\\final_project\\lib\\site-packages\\allure_commons\\_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\ui\\fixtures.py:76: in driver\n    browser.quit()\nD:\\Anaconda3\\envs\\final_project\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:949: in quit\n    self.execute(Command.QUIT)\nD:\\Anaconda3\\envs\\final_project\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020EF5EF06D0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: cannot kill Chrome\\\\n  (Session ...\\\\n#14 0x55b960b59998 \\\\u003Cunknown>\\\\n#15 0x55b960b74eed \\\\u003Cunknown>\\\\n#16 0x7fc1bab26609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: cannot kill Chrome\nE         (Session info: chrome=96.0.4664.45)\nE       Stacktrace:\nE       #0 0x55b960af5ee3 <unknown>\nE       #1 0x55b9605c3608 <unknown>\nE       #2 0x55b9605a24de <unknown>\nE       #3 0x55b9605a7de7 <unknown>\nE       #4 0x55b96061e96f <unknown>\nE       #5 0x55b9605e1af3 <unknown>\nE       #6 0x55b9605ecbfc <unknown>\nE       #7 0x55b9605edc05 <unknown>\nE       #8 0x55b960b27baa <unknown>\nE       #9 0x55b960b3d651 <unknown>\nE       #10 0x55b960b28b05 <unknown>\nE       #11 0x55b960b3ea68 <unknown>\nE       #12 0x55b960b1d05f <unknown>\nE       #13 0x55b960b59818 <unknown>\nE       #14 0x55b960b59998 <unknown>\nE       #15 0x55b960b74eed <unknown>\nE       #16 0x7fc1bab26609 <unknown>\n\nD:\\Anaconda3\\envs\\final_project\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: WebDriverException"}, "steps": [{"name": "Go to registration page", "status": "passed", "steps": [{"name": "Clicking on ('xpath', \"//a[@href = '/reg']\")", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//a[@href = '/reg']\")"}, {"name": "attempts", "value": "8"}], "start": 1640022590850, "stop": 1640022603021}], "start": 1640022590847, "stop": 1640022603029}, {"name": "Do not click on checkbox", "status": "passed", "steps": [{"name": "Try registred:usernsme: 'alicia95',email: 'erikawhite@gmail.com',password: '4J*6!xUsZe'repeat password: '4J*6!xUsZe'", "status": "passed", "steps": [{"name": "Write the value 'alicia95' in the field <InputFields.username: ('id', 'username')>", "status": "passed", "parameters": [{"name": "field", "value": "<InputFields.username: ('id', 'username')>"}, {"name": "input_value", "value": "'alicia95'"}], "start": 1640022603121, "stop": 1640022603546}, {"name": "Write the value 'erikawhite@gmail.com' in the field <InputFields.email: ('id', 'email')>", "status": "passed", "parameters": [{"name": "field", "value": "<InputFields.email: ('id', 'email')>"}, {"name": "input_value", "value": "'erikawhite@gmail.com'"}], "start": 1640022603547, "stop": 1640022603877}, {"name": "Write the value '4J*6!xUsZe' in the field <InputFields.password: ('id', 'password')>", "status": "passed", "parameters": [{"name": "field", "value": "<InputFields.password: ('id', 'password')>"}, {"name": "input_value", "value": "'4J*6!xUsZe'"}], "start": 1640022603878, "stop": 1640022604175}, {"name": "Write the value '4J*6!xUsZe' in the field <InputFields.repeat_password: ('id', 'confirm')>", "status": "passed", "parameters": [{"name": "field", "value": "<InputFields.repeat_password: ('id', 'confirm')>"}, {"name": "input_value", "value": "'4J*6!xUsZe'"}], "start": 1640022604175, "stop": 1640022604507}, {"name": "Clicking on <selenium.webdriver.remote.webelement.WebElement (session=\"44ba111fac965a7abe3e6a03ca7d123d\", element=\"782c63a1-19f2-43db-9ca5-fbf6e468ca90\")>", "status": "passed", "parameters": [{"name": "locator", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"44ba111fac965a7abe3e6a03ca7d123d\", element=\"782c63a1-19f2-43db-9ca5-fbf6e468ca90\")>"}, {"name": "attempts", "value": "8"}], "start": 1640022604509, "stop": 1640022647882}], "parameters": [{"name": "username_value", "value": "'alicia95'"}, {"name": "email_value", "value": "'erikawhite@gmail.com'"}, {"name": "password_value", "value": "'4J*6!xUsZe'"}, {"name": "repeat_value", "value": "'4J*6!xUsZe'"}, {"name": "accept_agreement", "value": "False"}], "start": 1640022603070, "stop": 1640022647898}], "start": 1640022603043, "stop": 1640022647899}], "start": 1640022590846, "stop": 1640022648962, "uuid": "3a5f2bcc-d6ab-434b-9852-0d431e267e1a", "historyId": "c88a9261db3a194ed9bde7b6cb13e73e", "testCaseId": "dbe098d4524428738c033d0f934916a6", "fullName": "tests.ui_test.registration_page.test_negative_registration.TestNegative#test_dont_accept", "labels": [{"name": "feature", "value": "UI tests"}, {"name": "tag", "value": "Negative tests"}, {"name": "epic", "value": "Awesome test application"}, {"name": "story", "value": "Registration page"}, {"name": "parentSuite", "value": "tests.ui_test.registration_page"}, {"name": "suite", "value": "test_negative_registration"}, {"name": "subSuite", "value": "TestNegative"}, {"name": "host", "value": "DESKTOP-LERA"}, {"name": "thread", "value": "14988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui_test.registration_page.test_negative_registration"}]}
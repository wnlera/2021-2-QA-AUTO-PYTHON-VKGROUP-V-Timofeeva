{"name": "test_password_match", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_negative_registration.TestNegative object at 0x0000028722054C40>\n\n    @allure.epic('Awesome test application')\n    @allure.feature('UI tests')\n    @allure.story('Registration page')\n    @allure.tag(\"Negative tests\")\n    def test_password_match(self):\n        with allure.step(\"Go to registration page\"):\n            self.login_page.click(self.login_page.locators.CREATE_LINK)\n        with allure.step(\"Input different password\"):\n            self.registration_page.register(username, email, password, password + \"a\")\n>       assert self.login_page.get_text(self.login_page.locators.ERROR_FLASH) == \"Passwords must match\"\n\ntests\\ui_test\\registration_page\\test_negative_registration.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\ui\\pages\\base_page.py:36: in get_text\n    WebDriverWait(self.driver, 2).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"475031fd3122b3cca868e0eb8c991703\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000287220531F0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Anaconda3\\envs\\final_project\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException"}, "steps": [{"name": "Go to registration page", "status": "passed", "steps": [{"name": "Clicking on ('xpath', \"//a[@href = '/reg']\")", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//a[@href = '/reg']\")"}, {"name": "attempts", "value": "8"}], "start": 1640013675585, "stop": 1640013676116}], "start": 1640013675585, "stop": 1640013676116}, {"name": "Input different password", "status": "passed", "steps": [{"name": "Try registred:usernsme: 'valdezzachary',email: 'dnelson@gmail.com',password: '2fWi1Hhti*'repeat password: '2fWi1Hhti*a'", "status": "passed", "steps": [{"name": "Write the value 'valdezzachary' in the field <InputFields.username: ('id', 'username')>", "status": "passed", "parameters": [{"name": "field", "value": "<InputFields.username: ('id', 'username')>"}, {"name": "input_value", "value": "'valdezzachary'"}], "start": 1640013676250, "stop": 1640013676441}, {"name": "Write the value 'dnelson@gmail.com' in the field <InputFields.email: ('id', 'email')>", "status": "passed", "parameters": [{"name": "field", "value": "<InputFields.email: ('id', 'email')>"}, {"name": "input_value", "value": "'dnelson@gmail.com'"}], "start": 1640013676442, "stop": 1640013676608}, {"name": "Write the value '2fWi1Hhti*' in the field <InputFields.password: ('id', 'password')>", "status": "passed", "parameters": [{"name": "field", "value": "<InputFields.password: ('id', 'password')>"}, {"name": "input_value", "value": "'2fWi1Hhti*'"}], "start": 1640013676608, "stop": 1640013676770}, {"name": "Write the value '2fWi1Hhti*a' in the field <InputFields.repeat_password: ('id', 'confirm')>", "status": "passed", "parameters": [{"name": "field", "value": "<InputFields.repeat_password: ('id', 'confirm')>"}, {"name": "input_value", "value": "'2fWi1Hhti*a'"}], "start": 1640013676771, "stop": 1640013676976}, {"name": "Clicking on ('xpath', \"//input[@id = 'term']\")", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//input[@id = 'term']\")"}, {"name": "attempts", "value": "8"}], "start": 1640013676976, "stop": 1640013677300}, {"name": "Clicking on <selenium.webdriver.remote.webelement.WebElement (session=\"475031fd3122b3cca868e0eb8c991703\", element=\"792a7364-d57f-498c-b6eb-828f3bb0c55e\")>", "status": "passed", "parameters": [{"name": "locator", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"475031fd3122b3cca868e0eb8c991703\", element=\"792a7364-d57f-498c-b6eb-828f3bb0c55e\")>"}, {"name": "attempts", "value": "8"}], "start": 1640013677300, "stop": 1640013677588}], "parameters": [{"name": "username_value", "value": "'valdezzachary'"}, {"name": "email_value", "value": "'dnelson@gmail.com'"}, {"name": "password_value", "value": "'2fWi1Hhti*'"}, {"name": "repeat_value", "value": "'2fWi1Hhti*a'"}, {"name": "accept_agreement", "value": "True"}], "start": 1640013676117, "stop": 1640013687601}], "start": 1640013676116, "stop": 1640013687601}], "start": 1640013675584, "stop": 1640013690051, "uuid": "7add2761-8d5a-4da3-b8a8-82a5a1b36d5d", "historyId": "99e22477e001525a49e8f49c60c89fce", "testCaseId": "2a5121a944a6971d75afadea90f254e0", "fullName": "tests.ui_test.registration_page.test_negative_registration.TestNegative#test_password_match", "labels": [{"name": "epic", "value": "Awesome test application"}, {"name": "story", "value": "Registration page"}, {"name": "tag", "value": "Negative tests"}, {"name": "feature", "value": "UI tests"}, {"name": "parentSuite", "value": "tests.ui_test.registration_page"}, {"name": "suite", "value": "test_negative_registration"}, {"name": "subSuite", "value": "TestNegative"}, {"name": "host", "value": "DESKTOP-LERA"}, {"name": "thread", "value": "15340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui_test.registration_page.test_negative_registration"}]}